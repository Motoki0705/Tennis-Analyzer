# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
.venv_*/
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# すべての data/ フォルダを無視
**/datasets/

# 例外: すべての data フォルダ内の .py ファイルは追跡する
data/
!**/data/*.py

# checkpointss
checkpoints/

# outputs
outputs/

# logs
tb_logs/
logs/

# onnx files
onnx/

# all code
all_code/

# hydra output
hydra_outputs/

.tmp.driveupload/

# =============================================================================
# ML/AI プロジェクト特有のファイル・ディレクトリ
# =============================================================================

# PyTorch Lightning ログ
lightning_logs/
wandb/
mlruns/

# TensorBoard ログ
runs/
tensorboard_logs/

# モデルファイル
*.pth
*.ckpt
*.pt
*.model
*.pkl
*.joblib

# ONNX モデル
*.onnx

# 学習済みモデルのキャッシュ
.cache/
*.cache

# =============================================================================
# データセット・メディアファイル関連
# =============================================================================

# 大容量メディアファイル
*.mp4
*.avi
*.mov
*.mkv
*.webm
*.flv
*.wmv
*.m4v

# ただし、samplesディレクトリ内のファイルは例外
!samples/**

# 画像ファイル（サンプル以外）
# ※必要に応じてコメントアウト
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.webp

# 音声ファイル
*.wav
*.mp3
*.aac
*.flac
*.ogg
*.m4a

# アーカイブファイル
*.zip
*.rar
*.tar
*.tar.gz
*.tar.bz2
*.7z

# ダウンロード関連
downloads/
downloaded_*/
download_cache/
downloaded_urls.txt
*_urls.txt

# =============================================================================
# Node.js / フロントエンド関連
# =============================================================================

# 依存関係
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# パッケージロックファイル (プロジェクトによって要検討)
package-lock.json
yarn.lock

# ビルド出力
build/
dist/
out/

# Next.js
.next/

# =============================================================================
# エディタ・IDE関連
# =============================================================================

# VS Code
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.vscode/tasks.json
!.vscode/settings.json.example

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-workspace
*.sublime-project

# =============================================================================
# OS関連
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.nfs*

# =============================================================================
# 一時ファイル・テストファイル
# =============================================================================

# 一時ファイル
*.tmp
*.temp
*.swp
*.swo
*~
.#*

# テスト出力
test_output/
test_results/
coverage_html/

# ドキュメント一時ファイル
*.md.bak
*.md~

# =============================================================================
# プロジェクト固有の除外パターン
# =============================================================================

# 一時的なテストファイル
test_*.md
*_test.md

# ball_tracker (外部ライブラリまたは一時的なコード)
# ball_tracker/

# アノテーション関連の一時ファイル
**/annotation/data/temp/
**/annotation/temp/

# フロントエンドのビルド成果物
**/frontend/build/
**/frontend/dist/
**/frontend/public/index.html

# 動的生成されるファイル
generated_*
auto_generated_*
