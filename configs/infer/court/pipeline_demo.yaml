# @package _global_

# Hydra configuration for court detection pipeline demo
hydra:
  output_subdir: hydra_outputs/${now:%Y-%m-%d_%H-%M-%S}
  run:
    dir: outputs/infer/court/pipeline_demo/${now:%Y-%m-%d_%H-%M-%S}

# Default configuration
defaults:
  - _self_

# Task identifier
task: court

# Input/Output settings
io:
  video: null  # Path to the input video (required)
  output: "demo_output_court.mp4"  # Output video file
  results_csv: "court_keypoints.csv"  # Output CSV file for keypoint results

# Device configuration
device: cuda  # Device to use: cuda, cpu

# Processing configuration
batch_size: 16  # Batch size for inference

# Court detection model configuration
court:
  checkpoint_path: null  # Path to the trained model checkpoint (.ckpt) - required
  input_size: [360, 640]  # Model input size [height, width]
  multi_channel: false  # Enable multi channel heatmap postprocess
  score_threshold: 0.3  # Minimum score to visualize a keypoint
  
# Court keypoint configuration
keypoints:
  num_keypoints: 14  # Number of court keypoints
  names: [
    "baseline_left",
    "baseline_right", 
    "baseline_center",
    "service_line_left",
    "service_line_right",
    "service_line_center",
    "center_line_top",
    "center_line_bottom",
    "net_left",
    "net_right",
    "net_center",
    "singles_left",
    "singles_right",
    "doubles_left"
  ]

# Visualization settings
visualization:
  enabled: true
  draw_keypoints: true
  draw_skeleton: true
  keypoint_radius: 5
  line_thickness: 2
  colors:
    keypoints: [0, 255, 0]  # Green for keypoints
    skeleton: [255, 0, 0]   # Red for skeleton lines
    text: [255, 255, 255]   # White for text

# Threading configuration
threading:
  num_workers: 3  # Number of worker threads
  queue_size_multiplier: 2  # Queue size = batch_size * this value

# Logging configuration
logging:
  level: INFO
  format: "%(asctime)s - %(levelname)s - %(message)s"